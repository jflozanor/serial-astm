package main

import (
	"encoding/hex"
	"fmt"
	"strings"
)

func main() {
	b := []byte{0x35, 0x52, 0x7c, 0x32, 0x7c, 0x5e, 0x5e, 0x5e, 0x31, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x2b, 0x39, 0x35, 0x30, 0x2b, 0x31, 0x2e, 0x30, 0x7c, 0x31, 0x35, 0x7c, 0x7c, 0x7c, 0x5e, 0x35, 0x5e, 0x7c, 0x7c, 0x56, 0x7c, 0x7c, 0x33, 0x34, 0x30, 0x30, 0x31, 0x36, 0x33, 0x37, 0x7c, 0x32, 0x30, 0x30, 0x38, 0x30, 0x35, 0x31, 0x36, 0x31, 0x35, 0x33, 0x35, 0x34, 0x30, 0x7c, 0x32, 0x30, 0x30, 0x38, 0x30, 0x35, 0x31, 0x36, 0x31, 0x35, 0x33, 0x36, 0x30, 0x32, 0x7c, 0x33, 0x34, 0x30, 0x30, 0x31, 0x36, 0x33, 0x37, 0x0d, 0x03}
	cs := byte(checkSum8Mod256(b))
	fmt.Println(strings.ToUpper(hex.EncodeToString([]byte{cs})))
}

//http://www.scadacore.com/field-applications/programming-calculators/online-checksum-calculator/
func checkSum8Mod256_2(data []byte) int {
	var sum int = 0
	for i := 0; i < len(data); i++ {
		sum += int(data[i])
	}
	fmt.Println(sum)
	fmt.Println(sum % 256)
	return sum % 256
}

func checkSum8Mod256(data []byte) byte {
	var sum byte = 0x00
	for i := 0; i < len(data); i++ {
		sum += data[i]
	}
	return sum
}
